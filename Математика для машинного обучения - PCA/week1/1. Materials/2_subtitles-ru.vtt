WEBVTT

1
00:00:01.310 --> 00:00:06.278
Данные часто компактно описываются некоторыми статистическими свойствами,

2
00:00:06.278 --> 00:00:08.255
такими как среднее значение и дисперсия.

3
00:00:08.255 --> 00:00:12.895
В этом видео мы расскажем, как вычислять средние значения наборов данных.

4
00:00:12.895 --> 00:00:17.125
Среднее значение набора данных описывает среднюю точку данных.

5
00:00:17.125 --> 00:00:19.973
Среднее значение не обязательно должно быть обычной точкой данных

6
00:00:19.973 --> 00:00:23.680
, а также не обязательно должно быть частью самого набора данных.

7
00:00:23.680 --> 00:00:27.625
Например, если мы посмотрим на набор изображений с цифрой восемь,

8
00:00:27.625 --> 00:00:31.325
среднее изображение выглядит следующим образом.

9
00:00:31.325 --> 00:00:34.420
Оно обладает свойствами всех изображений

10
00:00:34.420 --> 00:00:38.760
в наборе данных, но не является частью самого набора данных.

11
00:00:38.760 --> 00:00:42.630
Мы получили среднее значение восьми следующим образом.

12
00:00:42.630 --> 00:00:46.215
Помните, что изображение можно представить в виде длинного вектора

13
00:00:46.215 --> 00:00:50.010
в векторном пространстве больших размеров, сложив все пиксели вместе.

14
00:00:50.010 --> 00:00:53.205
После преобразования всех изображений в эти векторы

15
00:00:53.205 --> 00:00:55.710
мы берем все векторы изображений в нашем наборе данных,

16
00:00:55.710 --> 00:01:00.685
складываем их вместе и делим на количество изображений в наборе данных.

17
00:01:00.685 --> 00:01:03.105
Это дает нам средний вектор изображения.

18
00:01:03.105 --> 00:01:06.269
Если мы снова преобразуем этот вектор в изображение,

19
00:01:06.269 --> 00:01:09.955
мы получим среднюю цифру в наборе данных.

20
00:01:09.955 --> 00:01:12.630
Вот пример с четырьмя восьмерками,

21
00:01:12.630 --> 00:01:16.515
среднее значение первой — это просто само изображение.

22
00:01:16.515 --> 00:01:18.520
Но когда мы добавим второе изображение,

23
00:01:18.520 --> 00:01:22.500
мы увидим, что среднее изображение теперь содержит свойства обоих изображений.

24
00:01:22.500 --> 00:01:24.000
Когда мы добавляем третье изображение,

25
00:01:24.000 --> 00:01:29.210
среднее значение изображения — это все три изображения, расположенные друг над другом, разделенные на три.

26
00:01:29.210 --> 00:01:30.525
После четвертого изображения

27
00:01:30.525 --> 00:01:35.800
мы все еще можем видеть характеристики всех четырех изображений на среднем изображении.

28
00:01:35.800 --> 00:01:38.055
Когда мы добавляем больше изображений в наш набор данных,

29
00:01:38.055 --> 00:01:40.725
средняя цифра становится немного более размытой.

30
00:01:40.725 --> 00:01:43.325
И если мы возьмем все восьмерки в наборе данных,

31
00:01:43.325 --> 00:01:46.605
мы получим эту восьмерку в качестве среднего изображения.

32
00:01:46.605 --> 00:01:50.683
Как правило, если у нас есть набор данных от x1 до xn.

33
00:01:50.683 --> 00:01:59.105
Предположим, что D состоит из точек данных от x1 до xn.

34
00:01:59.105 --> 00:02:05.380
Среднее значение или ожидаемое значение этого набора данных мы получаем следующим образом.

35
00:02:05.380 --> 00:02:15.540
Мы записываем все ожидаемое значение D как единицу над количеством точек данных, так что это N,

36
00:02:15.540 --> 00:02:21.615
умноженное на сумму, и n равно единице заглавному N из xn,

37
00:02:21.615 --> 00:02:26.265
поэтому мы суммируем все точки данных в нашем наборе данных и

38
00:02:26.265 --> 00:02:31.255
делим на количество имеющихся точек данных.

39
00:02:31.255 --> 00:02:33.010
Давайте рассмотрим пример.

40
00:02:33.010 --> 00:02:38.200
Я создаю набор данных, состоящий из пяти чисел, которые я получаю, бросая пять кубиков.

41
00:02:38.200 --> 00:02:40.060
У нас получилось один, два,

42
00:02:40.060 --> 00:02:41.685
четыре, шесть и шесть.

43
00:02:41.685 --> 00:02:43.334
Итак, давайте запишем это.

44
00:02:43.334 --> 00:02:47.430
Итак, я хочу назвать это число D простым числом,

45
00:02:47.430 --> 00:02:53.175
равным единице, двум, четырем, шести и шести.

46
00:02:53.175 --> 00:02:57.660
Теперь ожидаемое значение или среднее значение

47
00:02:57.660 --> 00:03:05.290
этого набора данных представляет собой сумму всех элементов в этом наборе данных.

48
00:03:05.290 --> 00:03:10.615
Итак, это один плюс два плюс четыре плюс шесть плюс шесть плюс шесть

49
00:03:10.615 --> 00:03:18.600
, деленный на количество элементов в нашем наборе данных, и это пять.

50
00:03:18.600 --> 00:03:21.015
Итак, если сложить эти значения вместе и разделить их на пять,

51
00:03:21.015 --> 00:03:24.500
мы получим 19 на пять или 3,8.

52
00:03:24.500 --> 00:03:29.600
Мы ясно видим, что значение 3.8

53
00:03:29.600 --> 00:03:35.390
не входит в набор данных и не может быть достигнуто даже путем бросания кубиков.

54
00:03:35.390 --> 00:03:37.435
Поэтому стоит также иметь в виду, что,

55
00:03:37.435 --> 00:03:39.985
хотя среднее значение и является средним значением набора данных,

56
00:03:39.985 --> 00:03:42.715
оно не обязательно должно быть типичным.

57
00:03:42.715 --> 00:03:47.725
В этом видео мы вычислили среднее значение наборов данных как среднюю точку данных.

58
00:03:47.725 --> 00:03:50.485
Среднее значение не обязательно должно быть частью набора данных.

59
00:03:50.485 --> 00:03:52.345
В следующем видео

60
00:03:52.345 --> 00:03:59.370
мы познакомим вас с дисперсиями, описывающими распределение данных вокруг среднего значения.